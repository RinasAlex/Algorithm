Задание 1 (из лекции)
Дан отсортированный массив arr[] из n элементов.
Напишите рекурсивную функцию для поиска заданного элемента x в arr[] и возврата индекса x в массиве

Start:
1. Проверить базовый случай:      
    Если start > end,             
    вернуть -1   
2. Найти середину массива:        
   mid = Math.floor((start + end) / 2)  
3. Если arr[mid] = x,       
   вернуть mid 
4. Если arr[mid] < x,       
   вызвать рекурсивно      
   find(arr, x, mid + 1, end)   
5. Если arr[mid] > x,
   вызвать рекурсивно      
   find(arr, x, start, mid - 1)
6. Вернуть результат

Задание 2
Дан неотсортированный массив целых чисел. Написать рекурсивную функцию поиска максимального элемента.

 Start:
1. Проверить базовый случай:      
   Если index равен длине массива,
   вернуть максимальное значение  
   max 
2. Сравнить текущий элемент  
   с максимальным значением max: 
   Если arr[index] > max,    
   обновить значение max    
3. Вызвать рекурсивно         
   функцию findMax для            
   следующего элемента массива:   
   findMax(arr, index + 1, max)
4. Вернуть результат 
   (максимальное значение max)

Задание 3
Есть монеты достоинством 10, 5, 3 и 2 копейки. На вход передаётся массив, с имеющимся набором монет
(значение элемента определяет достоинство монеты) и сумма, которую нужно заплатить.
Напишите рекурсивную функцию которая должна определить, можно ли заплатить требуемую сумму имеющимися монетами.


Пример:
  canPay([5, 5, 3, 3, 2], 11) вернёт true
  canPay([5, 5, 3, 3, 2], 12) вернёт true
  canPay([5, 5, 3, 3, 2], 4)  вернёт false
  canPay([5, 2, 5, 5, 2], 13) вернёт false
  canPay([3, 2, 10, 2, 3], 16) вернёт true
  canPay([3, 2, 10, 2, 5], 16) вернёт false

Start:
1. Проверить базовый случай:      
   Если сумма равна 0,
   вернуть true                   
   Если сумма меньше 0 или
   больше 0 и нет монет,          
   вернуть false  
2. Попробовать платить с          
   каждой монетой:
   1. Вычесть достоинство        
   монеты из суммы                
   2. Вызвать рекурсивно          
   функцию для оставшейся суммы   
   и монет
3. Если хотя бы для одной монеты  
   можно составить сумму,
   вернуть true      
   Иначе вернуть false            
   